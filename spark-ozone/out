
RULE FileSystem.close
CLASS org.apache.hadoop.fs.FileSystem
METHOD close
IF TRUE
DO
  System.out.println("Closing file system instance: " + System.identityHashCode($0));
  System.out.println("   write.call: " + readCounter("write.call"));
  System.out.println("   write.allTime: " + readCounter("write.allTime"));
  System.out.println("   hsync.call: " + readCounter("hsync.call"));
  System.out.println("   hsync.allTime: " + readCounter("hsync.allTime"));
  System.out.println("   hflush.call: " + readCounter("hflush.call"));
  System.out.println("   hflush.allTime: " + readCounter("hflush.allTime"));
  System.out.println("   close.call: " + readCounter("close.call"));
  System.out.println("   close.allTime: " + readCounter("close.allTime"));
  System.out.println("   watchForCommit.call: " + readCounter("watchForCommit.call"));
  System.out.println("   watchForCommit.allTime: " + readCounter("watchForCommit.allTime"))

ENDRULE

RULE BlockOutputStream.watchForCommit.Entry
CLASS org.apache.hadoop.hdds.scm.storage.BlockOutputStream
METHOD watchForCommit
AT ENTRY
IF TRUE
DO resetTimer(Thread.currentThread());
   incrementCounter("watchForCommit.call")
ENDRULE

RULE BlockOutputStream.watchForCommit.Exit
CLASS org.apache.hadoop.hdds.scm.storage.BlockOutputStream
METHOD watchForCommit
AT EXIT
BIND elapsedTime = java.lang.Math.toIntExact(getElapsedTimeFromTimer(Thread.currentThread()))
IF TRUE
DO
   System.out.println("watchForCommit: " + elapsedTime);
   incrementCounter("watchForCommit.allTime", elapsedTime)
ENDRULE


RULE DataOutputStream.Write.Entry
CLASS ^FSDataOutputStream$PositionCache
METHOD write
AT ENTRY
IF TRUE
DO resetTimer(Thread.currentThread());
   incrementCounter("write.call")
ENDRULE

RULE DataOutputStream.Write.Exit
CLASS ^FSDataOutputStream$PositionCache
METHOD write
AT EXIT
BIND elapsedTime = java.lang.Math.toIntExact(getElapsedTimeFromTimer(Thread.currentThread()))
IF TRUE
DO
   incrementCounter("write.allTime", elapsedTime)
ENDRULE


RULE FSDataOutputStream.Hsync.Entry
CLASS FSDataOutputStream
METHOD hsync
AT ENTRY
IF TRUE
DO resetTimer(Thread.currentThread());
   incrementCounter("hsync.call")
ENDRULE

RULE FSDataOutputStream.Hsync.Exit
CLASS FSDataOutputStream
METHOD hsync
AT EXIT
BIND elapsedTime = java.lang.Math.toIntExact(getElapsedTimeFromTimer(Thread.currentThread()))
IF TRUE
DO
   incrementCounter("hsync.allTime", elapsedTime)
ENDRULE


RULE FSDataOutputStream.Hflush.Entry
CLASS ^FSDataOutputStream
METHOD hflush
AT ENTRY
IF TRUE
DO resetTimer(Thread.currentThread());
   incrementCounter("hflush.call")
ENDRULE

RULE FSDataOutputStream.Hflush.Exit
CLASS ^FSDataOutputStream
METHOD hflush
AT EXIT
BIND elapsedTime = java.lang.Math.toIntExact(getElapsedTimeFromTimer(Thread.currentThread()))
IF TRUE
DO
   incrementCounter("hflush.allTime", elapsedTime)
ENDRULE


RULE FSDataOutputStream.Close.Entry
CLASS ^FSDataOutputStream
METHOD close
AT ENTRY
IF TRUE
DO resetTimer(Thread.currentThread());
   incrementCounter("close.call")
ENDRULE

RULE FSDataOutputStream.Close.Exit
CLASS ^FSDataOutputStream
METHOD close
AT EXIT
BIND elapsedTime = java.lang.Math.toIntExact(getElapsedTimeFromTimer(Thread.currentThread()))
IF TRUE
DO
   incrementCounter("close.allTime", elapsedTime)
ENDRULE
